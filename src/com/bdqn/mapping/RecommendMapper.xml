<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.dao.RecommendMapper">
  <resultMap id="RecommendList" type="com.bdqn.entity.Recommend">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="data" jdbcType="VARCHAR" property="data" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, author, content, type, img, data
  </sql>
 <!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recommend
    where id = #{id,jdbcType=INTEGER}
  </select> -->
  
  <select id="SelectRecommend" resultMap="RecommendList">
		select * from Recommend
	</select>
	<!-- <resultMap type="com.bdqn.entity.Recommend" id="RecommendList">
		<id property="id" column="id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="content" column="content" />
		<result property="type" column="type" />
		<result property="img" column="img" />
		<result property="data" column="data" />
		
	</resultMap> -->
	
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bdqn.entity.Recommend">
    insert into recommend (id, title, author, 
      content, type, img, 
      data)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{data,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bdqn.entity.Recommend">
    insert into recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdqn.entity.Recommend">
    update recommend
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.entity.Recommend">
    update recommend
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>